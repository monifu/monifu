name: build

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
    tags: ["v[0-9]+*"]

#
# UPDATE here Scala versions!
#
scala_version_211: &scala_version_211 2.11.12
scala_version_212: &scala_version_212 2.12.12
scala_version_213: &scala_version_213 2.13.3
#
# UPDATE here Scala.JS versions!
#
# WARN: js-tests dictates compatibility with Scala versions!
#
sjs_version_06x: &sjs_version_06x 0.6.33
sjs_version_1x: &sjs_version_1x 1.1.1

jobs:
  jvm-tests:
    name: JVM / scala ${{ matrix.scala }}, jdk ${{ matrix.java }}
    runs-on: ubuntu-20.04
    strategy:
      # fail-fast: true
      matrix:
        java: [ 8, 11 ]
        scala: [ *scala_version_211, *scala_version_212, *scala_version_213 ]

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"

      - name: sbt ci-jvm
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          PLATFORM: ${{ matrix.java }}
          SBT_COMMAND: ci-jvm

  js-tests:
    name: JS / scala ${{ matrix.scala }}, sjs ${{ matrix.scalajs }}, jdk ${{ matrix.java }}
    runs-on: ubuntu-20.04
    strategy:
      # fail-fast: true
      matrix:
        include:
          - { java: 8, scala: *scala_version_211, scalajs: *sjs_version_06x }
          - { java: 8, scala: *scala_version_212, scalajs: *sjs_version_06x }
          - { java: 8, scala: *scala_version_212, scalajs: *sjs_version_1x }
          - { java: 8, scala: *scala_version_213, scalajs: *sjs_version_06x }
          - { java: 8, scala: *scala_version_213, scalajs: *sjs_version_1x }

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"

      - name: sbt ci-js
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          SCALAJS_VERSION: ${{ matrix.scalaJS }}
          PLATFORM: ${{ matrix.java }}
          SBT_COMMAND: ci-js

  mima:
    name: Mima / scala ${{ matrix.scala }}, sjs ${{ matrix.scalajs }}, jdk ${{ matrix.java }}
    runs-on: ubuntu-20.04
    strategy:
      # fail-fast: true
      matrix:
        include:
          - { java: 8, scala: *scala_version_211, scalajs: *sjs_version_06x }
          - { java: 8, scala: *scala_version_212, scalajs: *sjs_version_1x }
          - { java: 8, scala: *scala_version_213, scalajs: *sjs_version_1x }

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"

      - name: sbt mimaReportBinaryIssues
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          SCALAJS_VERSION: ${{ matrix.scalaJS }}
          SBT_COMMAND: mimaReportBinaryIssues

  unidoc:
    name: Unidoc / scala ${{ matrix.scala }}, sjs ${{ matrix.scalajs }}, jdk ${{ matrix.java }}
    runs-on: ubuntu-20.04
    strategy:
      # fail-fast: true
      matrix:
        include:
          - { java: 8, scala: *scala_version_213, scalajs: *sjs_version_1x }

    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: "adopt@1.${{ matrix.java }}"

      - name: sbt unidoc
        run: |
          ./.github/scripts/build
        env:
          SCALA_VERSION: ${{ matrix.scala }}
          SCALAJS_VERSION: ${{ matrix.scalaJS }}
          SBT_COMMAND: unidoc

  publish:
    name: Publish to Sonatype
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master')
    needs: [ jvm-tests, js-tests, mima, unidoc ]
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        scalajs: ["", *sjs_version_06x, *sjs_version_1x]
        command: [ci-release]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-gpg@v2
      - uses: olafurpg/setup-scala@v2
        with:
          java-version: "adopt@1.8"

      - name: SCALAJS_VERSION=${{ matrix.scalajs }} sbt ci-release
        run: |
          echo "SCALAJS_VERSION=$SCALAJS_VERSION"
          sbt clean ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SCALAJS_VERSION: ${{ matrix.scalaJS }}
